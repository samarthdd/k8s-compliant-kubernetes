environment:
rabbitmqService:
  name: rabbitmq-service
  port: 5672
  component: rabbitmq
  app: taskQueue
  key: rabbitmq-cluster-operator
lbService:
  dnsname: icap-client-main-t4
serviceAccount:
  adaptationname: adaptation-service-sa
  archiveadaptationname: archive-adaptation-service-sa
  policyupdatename: policy-update-service-sa
  janitorname: pod-janitor-sa
volumemountpath:
  source: "/var/source"
  target: "/var/target"
  transactions: /mnt/transactions
prometheus:
  metricsport: 8081
  metricspath: /metrics
  pushgatewayendpoint: "http://prometheus-pushgateway.icap-central-monitoring.svc.cluster.local:9091"
queue:
  messagebrokersecret: "rabbitmq-service-default-user"
  host:
    url: "rabbitmq-service" # this should be deprecated in preference to queue specific hostname
    port: "\"5672\"" # this should be deprecated in preference to queue specific port
  adaptationRequest:
    exchangename: "adaptation-exchange"
    requestqueuename: "adaptation-request-queue"
    replyqueuename: "amq.rabbitmq.reply-to"
    messagename: "adaptation-request"
    hostname: "rabbitmq-service"
    port: "\"5672\""
  archiveadaptationrequest:
    hostname: "rabbitmq-service"
    port: "\"5672\""
  transactionevent:
    hostname: "rabbitmq-service"
    port: "\"5672\""
adaptationservice:
  name: adaptation-service
  replicas:
    min: 1
    max: 80
  amqpurl: "amqp://guest:guest@rabbitmq-service:5672/"
  rolename: adaptation-service-role
archiveadaptationservice:
  name: archive-adaptation-service
  namespace: icap-adaptation
  replicas:
    min: 1
    max: 10
  amqpurl: "amqp://guest:guest@rabbitmq-service:5672/"
  exchange: adaptation-exchange
  rolename: archive-adaptation-service-role
icapservice:
  name: icap-service
  applabel: adaptation
  replicas:
    min: 1
    max: 150
  port: 1344
  tlsport: 1345
  enableFileId: true
icapserviceconfig:
  processingtimeoutduration: 00:01:00
cicapservice:
  conf:
    PidFile: /var/run/c-icap/c-icap.pid
    CommandsSocket: /var/run/c-icap/c-icap.ctl
    Timeout: 300
    MaxKeepAliveRequests: 100
    KeepAliveTimeout: 600
    StartServers: 3
    MaxServers: 10
    MinSpareThreads: 10
    MaxSpareThreads: 20
    ThreadsPerChild: 10
    MaxRequestsPerChild: 0
    Port: 1344
    TlsPort: 1345 tls-method=TLSv1_2 cert=/usr/local/c-icap/cert/tls.crt key=/usr/local/c-icap/cert/tls.key
    ServerAdmin: you@your.address
    ServerName: YourServerName
    TmpDir: /var/tmp
    MaxMemObject: 131072
    DebugLevel: 6
    Pipelining: !!string on
    SupportBuggyClients: !!string off
    ModulesDir: /usr/local/c-icap/lib/c_icap
    ServicesDir: /usr/local/c-icap/lib/c_icap
    TemplateDir: /usr/local/c-icap/share/c_icap/templates/
    TemplateDefaultLanguage: en
    LoadMagicFile: /usr/local/c-icap/etc/c-icap.magic
    RemoteProxyUsers: !!string off
    RemoteProxyUserHeader: X-Authenticated-User
    RemoteProxyUserHeaderEncoded: !!string on
    ServerLog: /proc/self/fd/1
    AccessLog: /proc/self/fd/1
    Service: echo srv_echo.so
    Include: gw_rebuild.conf
  rebuild:
    Service: gw_rebuild gw_rebuild.so
    gw_rebuild.MaxObjectSize: 2000M
    gw_rebuild.Allow204Responses: !!string on
    gw_rebuild.ProxyAppLocation: /usr/local/bin/cloud-proxy-app
    gw_rebuild.DataCleanup: !!string on
icapservicemetricsexporter:
  icaphost: localhost
  icapport: 1344
  service: info?view=text
podjanitor:
  name: pod-janitor
  namespace: icap-adaptation
  rolename: janitor-role
  deleteSuccessfulAfter: 1m
  deleteFailedAfter: 3m
eventsubmissionservice:
  name: event-submission-service
  replicas: 1
  amqpurl: "" # this should be deprecated in preference to queue specific hostname
policyupdateservice:
  name: policy-update-service
  applabel: policyupdate
  replicas: 1
  port: 10000
  rolename: policy-update-service-role
requestprocessingservice:
  configmapname: request-processing-config
  cpulimit: 1
  cpurequest: 0.2
  memorylimit: 10000Mi
  memoryrequest: 250Mi
transactionqueryservice:
  fullnameOverride: transaction-query-service
  replicaCount: 1
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 443
  deployment:
    containerPort: 443
  probes:
    enabled: false
  ingress:
    enabled: false
    annotations: {}
    path: /
    tls: []
  volumes:
    transactionstore:
      shareName: transactions
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
transactionstore:
  shareName: transactions
  storage: 100Gi
imagestore:
  requestprocessing:
    registry: ""
    repository: glasswallsolutions/icap-request-processing
    tag: develop-e14105a
  adaptationservice:
    registry: ""
    repository: glasswallsolutions/icap-adaptation-service
    tag: develop-5eeefcd
  podjanitor:
    registry: ""
    repository: glasswallsolutions/pod-janitor
    tag: develop-d2f944d
  icapservice:
    registry: ""
    repository: glasswallsolutions/mvp-icap-service
    tag: develop-c968f8d
  icapservicemetricsexporter:
    registry: ""
    repository: glasswallsolutions/icap-service-metrics-exporter
    tag: develop-8532480
  eventsubmission:
    registry: ""
    repository: glasswallsolutions/event-submission-service
    tag: develop-3a1004e
  policyupdate:
    registry: ""
    repository: glasswallsolutions/policy-update-service
    tag: develop-25d78e8
  archiveadaptationservice:
    registry: ""
    repository: glasswallsolutions/archive-adaptation-service
    tag: develop-a042047
  archiveprocessingservice:
    registry: ""
    repository: glasswallsolutions/archive-processing-service
    tag: develop-0e36a0e
  transactionqueryservice:
    registry: ""
    repository: glasswallsolutions/transaction-query-service
    tag: develop-ece85e7
secrets:
  containerregistry:
    dockerconfigjson: "<<https://gw-icap-keyvault.vault.azure.net/secrets/az-registry-dockerconfig>>"
  transactionqueryservice:
    transactionqueryservicesecret:
      username: "<<https://gw-icap-keyvault.vault.azure.net/secrets/transactionQueryServiceUsername>>"
      password: "<<https://gw-icap-keyvault.vault.azure.net/secrets/transactionQueryServicePassword>>"
  policyupdateservice:
    policyupdateservicesecret:
      username: "<<https://gw-icap-keyvault.vault.azure.net/secrets/policyUpdateServiceUsername>>"
      password: "<<https://gw-icap-keyvault.vault.azure.net/secrets/policyUpdateServicePassword>>"
  transactionstore:
    transactionstoresecret:
      azurestorageaccountname: "<<https://gw-icap-keyvault.vault.azure.net/secrets/transactionStoreAccountName>>"
      azurestorageaccountkey: "<<https://gw-icap-keyvault.vault.azure.net/secrets/transactionStoreAccountKey>>"
  mvpicapservice:
    tls:
      tlsCert: "<<https://gw-icap-keyvault.vault.azure.net/secrets/mvpicapserviceTlsCert>>"
      tlsKey: "<<https://gw-icap-keyvault.vault.azure.net/secrets/mvpicapserviceTlsKey>>"
